# build_bookie.yml (by the way, do yml files use _ or - for complex names?)
name: build test bookies

on: [workflow_dispatch]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Docker Login
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

    - name: Docker Build
      run: |
        docker build -t "${{ secrets.DOCKER_USER }}/test-bookies" .

    - name: Docker Push
      run: |
        docker push "${{ secrets.DOCKER_USER }}/test-bookies"

# run*bookie.yml
name: pull and run test bookies

on: [workflow_dispatch]

jobs:
  pull_and_run:
    runs-on: ubuntu-latest
    steps:
    - name: Docker Login
      run: |
        echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USER }}" --password-stdin

    - name: Pull Docker Image
      run: |
        docker pull "${{ secrets.DOCKER_USER }}/test-bookies"
    - name: Run Docker Container with Volume
      run: |
        mkdir -p screenshots
        docker run --name test-bookies-container -v ${{ runner.workspace }}/screenshots:/app/screenshots "${{ secrets.DOCKER_USER }}/test-bookies"

    - name: Save Screenshots as Artifacts
      uses: actions/upload-artifact@v3
      with:
        name: screenshots
        path: screenshots/*.png

    - name: Clean up
      run: |
        docker rm test-bookies-container
# requirements.txt
pytest
pandas
agentql
asyncio
thefuzz
playwright
python-dotenv
pyvirtualdisplay

# run.sh
#!/bin/sh
agentql init
export
AGENTQL_API_KEY=xJ2gYetiuPm2qbQl_h5ietTOPGaO38BsEUyuGcWDGaoNEcGhoBMMZA
pytest -v -s test_bookies.py
#echo "Starting HTTP server on port 8000 to serve the screenshot..."
#python3 -m http.server 8000 --directory /output to

# test_bookies.py
from playwright.sync_api import sync_playwright
from pyvirtualdisplay import Display
from collections import namedtuple
from phunctions import *
from klasses import *
import pandas as pd
import agentql
import random
import pytest
import time


def test_bookies():
    URL = ["https://whatmyuseragent.com/", "https://www.betus.com.pa/sportsbook/", "https://sports.betmgm.com/en/sports", "https://sportsbook.draftkings.com/"]
    display = Display(visible=False, size=(1920, 1080))
    display.start()
    display_on()
    with sync_playwright() as p:        
        browser = p.chromium.launch(headless=False)
        page = agentql.wrap(browser.new_page())
        for index in range(len(URL)):
            page.goto(URL[index])
            page.wait_for_timeout(10000)
            page.screenshot(path=f"/app/screenshots/shot{index + 1}.png", full_page=True)
            time.sleep(5)
        browser.close()

    display_off(display)

# phunctions.py
from pyvirtualdisplay import Display

def display_on():
    display = Display(visible=False, size=(1920, 1080))
    display.start()
    return display

def display_off(display):
    display.stop()

# dockerfile

FROM python:3.9-slim

WORKDIR /app

COPY requirements.txt . 
RUN pip install -r requirements.txt
RUN python -m pip install chrome_extension_python
RUN playwright install --with-deps
#RUN apt install -y openvpn dialog #python3-pip python3-setuptools
#RUN pip3 install protonvpn-cli
# Install system dependencies
RUN apt-get update && apt-get install -y \
    libnss3 \
    libnspr4 \
    libdbus-1-3 \
    libatk1.0-0 \
    libatk-bridge2.0-0 \
    libcups2 \
    libdrm2 \
    libxkbcommon0 \
    libatspi2.0-0 \
    libxcomposite1 \
    libxdamage1 \
    libxfixes3 \
    libxrandr2 \
    libgbm1 \
    libasound2 \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/*

COPY . .

RUN chmod +x run.sh
CMD ["./run.sh"]

# excerpt of github actions output

ï»¿2024-12-13T10:00:53.2420818Z ##[group]Run mkdir -p screenshots
mkdir -p screenshots
docker run --name test-bookies-container -v /home/runner/work/docker-test-action/screenshots:/app/screenshots "***/test-bookies"
shell: /usr/bin/bash -e {0}
Installing dependencies...
Get your AgentQL API key at https://dev.agentql.com
Aborted.
Enter your AgentQL API key: export GPG_KEY='E3FF2839C048B25C084DEBE9B26995E310250568'
export HOME='/root'
export HOSTNAME='ca6b7ab7dc44'
export LANG='C.UTF-8'
export PATH='/usr/local/bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin'
export PWD='/app'
export PYTHON_SHA256='3126f59592c9b0d798584755f2bf7b081fa1ca35ce7a6fea980108d752a05bb1'
export PYTHON_VERSION='3.9.21'
/usr/local/lib/python3.9/site-packages/pytest_asyncio/plugin.py:207: PytestDeprecationWarning: The configuration option "asyncio_default_fixture_loop_scope" is unset.
The event loop scope for asynchronous fixtures will default to the fixture caching scope. Future versions of pytest-asyncio will default the loop scope for asynchronous fixtures to function scope. Set the default fixture loop scope explicitly in order to avoid unexpected behavior in the future. Valid fixture loop scopes are: "function", "class", "module", "package", "session"

  warnings.warn(PytestDeprecationWarning(_DEFAULT_FIXTURE_LOOP_SCOPE_UNSET))
============================= test session starts ==============================
platform linux -- Python 3.9.21, pytest-8.3.4, pluggy-1.5.0 -- /usr/local/bin/python3.9
cachedir: .pytest_cache
rootdir: /app
plugins: anyio-4.7.0, mockito-0.0.4, asyncio-0.25.0
asyncio: mode=strict, asyncio_default_fixture_loop_scope=None
collecting ... collected 1 item

test_bookies.py::test_bookies PASSED

========================= 1 passed in 72.26s (0:01:12) =========================

2024-12-13T10:02:07.1594201Z ##[group]Run actions/upload-artifact@v3
with:
  name: screenshots
  path: screenshots/*.png
  if-no-files-found: warn
  include-hidden-files: false
No files were found with the provided path: screenshots/*.png. No artifacts will be uploaded.
